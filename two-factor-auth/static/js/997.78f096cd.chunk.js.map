{"version":3,"file":"static/js/997.78f096cd.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/immutability-helper/index.js","../node_modules/mobx-react-lite/src/utils/assertEnvironment.ts","../node_modules/mobx-react-lite/src/utils/observerBatching.ts","../node_modules/mobx-react-lite/src/utils/printDebugValue.ts","../node_modules/mobx-react-lite/src/utils/UniversalFinalizationRegistry.ts","../node_modules/mobx-react-lite/src/utils/observerFinalizationRegistry.ts","../node_modules/mobx-react-lite/src/staticRendering.ts","../node_modules/mobx-react-lite/src/useObserver.ts","../node_modules/mobx-react-lite/src/observer.ts","../node_modules/mobx-react-lite/src/index.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringifiable(obj) {\n    // Safely stringify Object.create(null)\n    /* istanbul ignore next */\n    return typeof obj === 'object' && !('toString' in obj) ?\n        Object.prototype.toString.call(obj).slice(8, -1) :\n        obj;\n}\nvar isProduction = typeof process === 'object' && process.env.NODE_ENV === 'production';\nfunction invariant(condition, message) {\n    if (!condition) {\n        /* istanbul ignore next */\n        if (isProduction) {\n            throw new Error('Invariant failed');\n        }\n        throw new Error(message());\n    }\n}\nexports.invariant = invariant;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\nvar toString = Object.prototype.toString;\nfunction type(obj) {\n    return toString.call(obj).slice(8, -1);\n}\nvar assign = Object.assign || /* istanbul ignore next */ (function (target, source) {\n    getAllKeys(source).forEach(function (key) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n});\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function'\n    ? function (obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)); }\n    /* istanbul ignore next */\n    : function (obj) { return Object.keys(obj); };\nfunction copy(object) {\n    return Array.isArray(object)\n        ? assign(object.constructor(object.length), object)\n        : (type(object) === 'Map')\n            ? new Map(object)\n            : (type(object) === 'Set')\n                ? new Set(object)\n                : (object && typeof object === 'object')\n                    ? assign(Object.create(Object.getPrototypeOf(object)), object)\n                    /* istanbul ignore next */\n                    : object;\n}\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.commands = assign({}, defaultCommands);\n        this.update = this.update.bind(this);\n        // Deprecated: update.extend, update.isEquals and update.newContext\n        this.update.extend = this.extend = this.extend.bind(this);\n        this.update.isEquals = function (x, y) { return x === y; };\n        this.update.newContext = function () { return new Context().update; };\n    }\n    Object.defineProperty(Context.prototype, \"isEquals\", {\n        get: function () {\n            return this.update.isEquals;\n        },\n        set: function (value) {\n            this.update.isEquals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Context.prototype.extend = function (directive, fn) {\n        this.commands[directive] = fn;\n    };\n    Context.prototype.update = function (object, $spec) {\n        var _this = this;\n        var spec = (typeof $spec === 'function') ? { $apply: $spec } : $spec;\n        if (!(Array.isArray(object) && Array.isArray(spec))) {\n            invariant(!Array.isArray(spec), function () { return \"update(): You provided an invalid spec to update(). The spec may \" +\n                \"not contain an array except as the value of $set, $push, $unshift, \" +\n                \"$splice or any custom command allowing an array value.\"; });\n        }\n        invariant(typeof spec === 'object' && spec !== null, function () { return \"update(): You provided an invalid spec to update(). The spec and \" +\n            \"every included key path must be plain objects containing one of the \" +\n            (\"following commands: \" + Object.keys(_this.commands).join(', ') + \".\"); });\n        var nextObject = object;\n        getAllKeys(spec).forEach(function (key) {\n            if (hasOwnProperty.call(_this.commands, key)) {\n                var objectWasNextObject = object === nextObject;\n                nextObject = _this.commands[key](spec[key], nextObject, spec, object);\n                if (objectWasNextObject && _this.isEquals(nextObject, object)) {\n                    nextObject = object;\n                }\n            }\n            else {\n                var nextValueForKey = type(object) === 'Map'\n                    ? _this.update(object.get(key), spec[key])\n                    : _this.update(object[key], spec[key]);\n                var nextObjectValue = type(nextObject) === 'Map'\n                    ? nextObject.get(key)\n                    : nextObject[key];\n                if (!_this.isEquals(nextValueForKey, nextObjectValue)\n                    || typeof nextValueForKey === 'undefined'\n                        && !hasOwnProperty.call(object, key)) {\n                    if (nextObject === object) {\n                        nextObject = copy(object);\n                    }\n                    if (type(nextObject) === 'Map') {\n                        nextObject.set(key, nextValueForKey);\n                    }\n                    else {\n                        nextObject[key] = nextValueForKey;\n                    }\n                }\n            }\n        });\n        return nextObject;\n    };\n    return Context;\n}());\nexports.Context = Context;\nvar defaultCommands = {\n    $push: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$push');\n        return value.length ? nextObject.concat(value) : nextObject;\n    },\n    $unshift: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$unshift');\n        return value.length ? value.concat(nextObject) : nextObject;\n    },\n    $splice: function (value, nextObject, spec, originalObject) {\n        invariantSplices(nextObject, spec);\n        value.forEach(function (args) {\n            invariantSplice(args);\n            if (nextObject === originalObject && args.length) {\n                nextObject = copy(originalObject);\n            }\n            splice.apply(nextObject, args);\n        });\n        return nextObject;\n    },\n    $set: function (value, _nextObject, spec) {\n        invariantSet(spec);\n        return value;\n    },\n    $toggle: function (targets, nextObject) {\n        invariantSpecArray(targets, '$toggle');\n        var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n        targets.forEach(function (target) {\n            nextObjectCopy[target] = !nextObject[target];\n        });\n        return nextObjectCopy;\n    },\n    $unset: function (value, nextObject, _spec, originalObject) {\n        invariantSpecArray(value, '$unset');\n        value.forEach(function (key) {\n            if (Object.hasOwnProperty.call(nextObject, key)) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                delete nextObject[key];\n            }\n        });\n        return nextObject;\n    },\n    $add: function (values, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$add');\n        invariantSpecArray(values, '$add');\n        if (type(nextObject) === 'Map') {\n            values.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (nextObject === originalObject && nextObject.get(key) !== value) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.set(key, value);\n            });\n        }\n        else {\n            values.forEach(function (value) {\n                if (nextObject === originalObject && !nextObject.has(value)) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.add(value);\n            });\n        }\n        return nextObject;\n    },\n    $remove: function (value, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$remove');\n        invariantSpecArray(value, '$remove');\n        value.forEach(function (key) {\n            if (nextObject === originalObject && nextObject.has(key)) {\n                nextObject = copy(originalObject);\n            }\n            nextObject.delete(key);\n        });\n        return nextObject;\n    },\n    $merge: function (value, nextObject, _spec, originalObject) {\n        invariantMerge(nextObject, value);\n        getAllKeys(value).forEach(function (key) {\n            if (value[key] !== nextObject[key]) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject[key] = value[key];\n            }\n        });\n        return nextObject;\n    },\n    $apply: function (value, original) {\n        invariantApply(value);\n        return value(original);\n    },\n};\nvar defaultContext = new Context();\nexports.isEquals = defaultContext.update.isEquals;\nexports.extend = defaultContext.extend;\nexports.default = defaultContext.update;\n// @ts-ignore\nexports.default.default = module.exports = assign(exports.default, exports);\n// invariants\nfunction invariantPushAndUnshift(value, spec, command) {\n    invariant(Array.isArray(value), function () { return \"update(): expected target of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(value) + \".\"; });\n    invariantSpecArray(spec[command], command);\n}\nfunction invariantSpecArray(spec, command) {\n    invariant(Array.isArray(spec), function () { return \"update(): expected spec of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(spec) + \". \" +\n        \"Did you forget to wrap your parameter in an array?\"; });\n}\nfunction invariantSplices(value, spec) {\n    invariant(Array.isArray(value), function () { return \"Expected $splice target to be an array; got \" + stringifiable(value); });\n    invariantSplice(spec.$splice);\n}\nfunction invariantSplice(value) {\n    invariant(Array.isArray(value), function () { return \"update(): expected spec of $splice to be an array of arrays; got \" + stringifiable(value) + \". \" +\n        \"Did you forget to wrap your parameters in an array?\"; });\n}\nfunction invariantApply(fn) {\n    invariant(typeof fn === 'function', function () { return \"update(): expected spec of $apply to be a function; got \" + stringifiable(fn) + \".\"; });\n}\nfunction invariantSet(spec) {\n    invariant(Object.keys(spec).length === 1, function () { return \"Cannot have more than one key in an object with $set\"; });\n}\nfunction invariantMerge(target, specValue) {\n    invariant(specValue && typeof specValue === 'object', function () { return \"update(): $merge expects a spec of type 'object'; got \" + stringifiable(specValue); });\n    invariant(target && typeof target === 'object', function () { return \"update(): $merge expects a target of type 'object'; got \" + stringifiable(target); });\n}\nfunction invariantMapOrSet(target, command) {\n    var typeOfTarget = type(target);\n    invariant(typeOfTarget === 'Map' || typeOfTarget === 'Set', function () { return \"update(): \" + stringifiable(command) + \" expects a target of type Set or Map; got \" + stringifiable(typeOfTarget); });\n}\n","import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\n\nfunction observerComponentNameFor(baseComponentName: string) {\n    return `observer${baseComponentName}`\n}\n\ntype ObserverAdministration = {\n    /** The Reaction created during first render, which may be leaked */\n    reaction: Reaction | null\n\n    /**\n     * Whether the component has yet completed mounting (for us, whether\n     * its useEffect has run)\n     */\n    mounted: boolean\n\n    /**\n     * Whether the observables that the component is tracking changed between\n     * the first render and the first useEffect.\n     */\n    changedBeforeMount: boolean\n}\n\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nclass ObjectToBeRetainedByReact {}\n\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact()\n}\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return fn()\n    }\n\n    const [objectRetainedByReact] = React.useState(objectToBeRetainedByReactFactory)\n    // Force update, see #2982\n    const [, setState] = React.useState()\n    const forceUpdate = () => setState([] as any)\n\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        admRef.current = {\n            reaction: null,\n            mounted: false,\n            changedBeforeMount: false\n        }\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or component was not committed and reaction was disposed by registry\n        adm.reaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (adm.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate()\n            } else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                adm.changedBeforeMount = true\n            }\n        })\n\n        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction, printDebugValue)\n\n    React.useEffect(() => {\n        observerFinalizationRegistry.unregister(adm)\n\n        adm.mounted = true\n\n        if (adm.reaction) {\n            if (adm.changedBeforeMount) {\n                // Got a change before mount, force an update\n                adm.changedBeforeMount = false\n                forceUpdate()\n            }\n        } else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n\n            // Re-create the reaction\n            adm.reaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n                // We've definitely already been mounted at this point\n                forceUpdate()\n            })\n            forceUpdate()\n        }\n\n        return () => {\n            adm.reaction!.dispose()\n            adm.reaction = null\n            adm.mounted = false\n            adm.changedBeforeMount = false\n        }\n    }, [])\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let rendering!: T\n    let exception\n    adm.reaction.track(() => {\n        try {\n            rendering = fn()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return rendering\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;(observerComponent as React.FunctionComponent).displayName = baseComponentName\n    }\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport const clearTimes = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","stringifiable","obj","slice","defineProperty","value","isProduction","process","invariant","condition","message","Error","splice","type","assign","target","getAllKeys","forEach","getOwnPropertySymbols","concat","copy","object","Map","Set","create","getPrototypeOf","Context","this","commands","defaultCommands","update","bind","extend","isEquals","x","y","newContext","get","set","enumerable","configurable","directive","fn","$spec","_this","spec","$apply","join","nextObject","objectWasNextObject","nextValueForKey","nextObjectValue","$push","invariantPushAndUnshift","$unshift","$splice","originalObject","invariantSplice","invariantSplices","args","apply","$set","_nextObject","invariantSet","$toggle","targets","invariantSpecArray","nextObjectCopy","$unset","_spec","$add","values","invariantMapOrSet","_a","has","add","$remove","delete","$merge","specValue","original","defaultContext","command","typeOfTarget","default","useState","makeObservable","defaultNoopBatch","callback","printDebugValue","v","getDependencyTree","REGISTRY_FINALIZE_AFTER","TimerBasedFinalizationRegistry","finalize","maxAge","clearTimeout","sweepTimeout","undefined","now","Date","registrations","registration","token","registeredAt","size","scheduleSweep","sweep","setTimeout","observerFinalizationRegistry","FinalizationRegistry","adm","reaction","dispose","globalIsUsingStaticRendering","isUsingStaticRendering","observerComponentNameFor","baseComponentName","ObjectToBeRetainedByReact","objectToBeRetainedByReactFactory","useObserver","objectRetainedByReact","__read","React","setState","forceUpdate","admRef","current","mounted","changedBeforeMount","rendering","exception","Reaction","register","unregister","track","e","hasSymbol","Symbol","for","ReactForwardRefSymbol","forwardRef","props","ReactMemoSymbol","memo","observer","baseComponent","options","useForwardRef","render","displayName","name","base","observerComponent","ref","contextTypes","hoistBlackList","getOwnPropertyDescriptor","$$typeof","compare","reactionScheduler","batch","configure","ownKeys","enumerableOnly","symbols","filter","sym","push","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","shallowEqual","objA","objB","compareContext","compareResult","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","useMonitorOutput","monitor","collect","onCollect","_useCollector","onUpdate","_useState","_useState2","_slicedToArray","collected","setCollected","updateCollected","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","_useCollector2","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","useDragDropManager","dragDropManager","useContext","DndContext","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","dragPreview","SourceConnector","backend","_classCallCheck","wrapConnectorHooks","node","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","_createClass","newHandlerId","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","sourceId","internalMonitor","getMonitor","canDragSource","isDraggingSource","listener","targetId","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","DragSourceImpl","result","item","canDrag","globalMonitor","isDragging","end","useRegisteredDragSource","handler","useEffect","useDragSource","itemType","useDragType","_registerSource","registerSource","_registerSource2","receiveHandlerId","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","DropTargetMonitorImpl","DropTargetImpl","canDrop","hover","drop","useRegisteredDropTarget","useDropTarget","accept","useAccept","_registerTarget","registerTarget","_registerTarget2","map","useDrop","useDropTargetMonitor","useDropTargetConnector","window","useLayoutEffect","arg","memoDeps","_toConsumableArray","registry","getRegistry","addTarget","removeTarget","addSource","removeSource","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","throwIfCompositeComponentElement","newRef","previousRef","cloneElement","setRef","cloneWithRef","wrappedHooks","endsWith","wrappedHook"],"sourceRoot":""}