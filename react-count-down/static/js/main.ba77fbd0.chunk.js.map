{"version":3,"sources":["../../src/Circle/Circle.styles.tsx","../../src/Circle/Counter.tsx","../../src/Circle/index.tsx","../../src/utils/configs.ts","App.tsx","index.tsx"],"names":["CircleStyle","styled","_ref4","_ref4$width","width","_width","_ref4$height","height","display","borderRadius","alignItems","backgroundColor","justifyContent","transform","OverlayLayerStyle","div","_t4","_templateObject4","_taggedTemplateLiteral","p","negative","borderWidth","_ref3","color","timeLoss","totalTime","milestones","bt","toFixed","keyframes","_t3","_templateObject3","Number","overlayKeyframe","MainLayerStyle","_t5","_templateObject5","_ref","br","bb","bl","_t","_templateObject","percent","bool","concat","getBR","getBB","getBL","borderMainKeyframe","_ref2","_t2","_templateObject2","rotateMainKeyframe","ViewerStyle","span","_t6","_templateObject6","StaticLayerStyle","_t7","_templateObject7","Couter","_ref5","currentTime","onRefresh","viewer","useRef","useEffect","interval","setInterval","current","innerHTML","clearInterval","React","createElement","ref","className","Circle","_ref6","_ref6$width","_ref6$height","_height","_ref6$ready","ready","_ready","_ref6$color","_color","_ref6$borderWidth","_borderWidth","_ref6$totalTime","_totalTime","_ref6$currentTime","_currentTime","_ref6$onRefresh","_onRefresh","_useState","useState","_useState2","_slicedToArray","setTimeLoss","Fragment","App","style","maxWidth","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba77fbd0.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components'\r\nimport {\r\n  CounterViewStyleType as CircleStyleType,\r\n  KeyframesType,\r\n  MainLayerStyleType,\r\n  OverlayLayerStyleType,\r\n  StaticLayerStyleType\r\n} from './Circle.types'\r\n\r\nconst borderMainKeyframe = ({\r\n  color,\r\n  negative,\r\n  timeLoss,\r\n  totalTime\r\n}: KeyframesType) => {\r\n  const getBR = (percent: number) => {\r\n    let bool = !(timeLoss / totalTime >= percent)\r\n    if (negative) bool = !bool\r\n    return `border-right-color: ${bool ? color : 'transparent'};`\r\n  }\r\n  const getBB = (percent: number) => {\r\n    let bool = !(timeLoss / totalTime >= percent)\r\n    if (negative) bool = !bool\r\n    return `border-bottom-color: ${bool ? color : 'transparent'};`\r\n  }\r\n  const getBL = (percent: number) => {\r\n    let bool = !(timeLoss / totalTime >= percent)\r\n    if (negative) bool = !bool\r\n    return `border-left-color: ${bool ? color : 'transparent'};`\r\n  }\r\n  const br = (\r\n    ((totalTime / 4 - timeLoss) * 100) /\r\n    (totalTime - timeLoss)\r\n  ).toFixed(2)\r\n  const bb = (\r\n    ((totalTime / 2 - timeLoss) * 100) /\r\n    (totalTime - timeLoss)\r\n  ).toFixed(2)\r\n  const bl = (\r\n    (((totalTime * 3) / 4 - timeLoss) * 100) /\r\n    (totalTime - timeLoss)\r\n  ).toFixed(2)\r\n\r\n  return keyframes`\r\n  0% {\r\n    ${getBR(0.25)}\r\n    ${getBB(0.5)}\r\n    ${getBL(0.75)}\r\n  }\r\n  ${Number(br) - 0.01 + '%'} {\r\n    border-right-color:  ${negative ? 'transparent' : color};\r\n  }\r\n  ${br + '%'} {\r\n    border-right-color: ${negative ? color : 'transparent'};\r\n  }\r\n  ${Number(bb) - 0.01 + '%'} {\r\n    border-bottom-color:${negative ? 'transparent' : color};\r\n  }\r\n  ${bb + '%'} {\r\n    border-bottom-color: ${negative ? color : 'transparent'};\r\n  }\r\n  ${Number(bl) - 0.01 + '%'} {\r\n    border-left-color:${negative ? 'transparent' : color};\r\n  }\r\n  ${bl + '%'} {\r\n    border-left-color: ${negative ? color : 'transparent'};\r\n  }\r\n  100% {\r\n    border-right-color: ${negative ? color : 'transparent'};\r\n    border-bottom-color: ${negative ? color : 'transparent'};\r\n    border-left-color: ${negative ? color : 'transparent'}\r\n  }\r\n  `\r\n}\r\n\r\nconst rotateMainKeyframe = ({\r\n  timeLoss,\r\n  totalTime\r\n}: KeyframesType) => keyframes`\r\n0% {\r\n  transform: rotate(${(360 * timeLoss) / totalTime}deg);\r\n}\r\n100% {\r\n  transform: rotate(360deg);\r\n}\r\n`\r\n\r\nconst overlayKeyframe = ({\r\n  color,\r\n  negative,\r\n  timeLoss,\r\n  totalTime\r\n}: KeyframesType) => {\r\n  const milestones = (totalTime * 3) / 4 - timeLoss\r\n  const bt = (\r\n    ((milestones > 0 ? milestones : 0) * 100) /\r\n    (totalTime - timeLoss)\r\n  ).toFixed(2)\r\n  return keyframes`\r\n  0% {\r\n    border-top-color: ${negative ? '#ffffff' : color};\r\n  }\r\n  ${Number(bt) - 0.01 + '%'} {\r\n    border-top-color: ${negative ? '#ffffff' : color};\r\n  }\r\n  ${bt + '%'} {\r\n    border-top-color: transparent;\r\n  }\r\n  99.99%{\r\n    border-top-color: transparent;\r\n  }\r\n  100% {\r\n    border-top-color: ${negative ? '#ffffff' : color};\r\n  }\r\n  `\r\n}\r\n\r\nexport const CircleStyle = styled('div')<CircleStyleType>(\r\n  ({ width = 40, height = 40 }) => ({\r\n    width,\r\n    height,\r\n    display: 'flex',\r\n    borderRadius: '100%',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'center',\r\n    transform: `rotate(-45deg)`\r\n  })\r\n)\r\n\r\nexport const OverlayLayerStyle = styled.div<OverlayLayerStyleType>`\r\n  position: absolute;\r\n  inset: ${(p) => (p.negative ? -1 : 0)}px;\r\n  border-radius: 100%;\r\n  border: ${(p) => p.borderWidth + (p.negative ? 2 : 0)}px solid transparent;\r\n  animation-name: ${(p) =>\r\n    overlayKeyframe({\r\n      color: p.color,\r\n      negative: p.negative,\r\n      timeLoss: p.timeLoss,\r\n      totalTime: p.totalTime\r\n    })};\r\n  animation-duration: ${(p) => p.totalTime - p.timeLoss}s;\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n`\r\n\r\nexport const MainLayerStyle = styled.div<MainLayerStyleType>`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  border-radius: 100%;\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    animation-duration: ${(p) => p.totalTime - p.timeLoss}s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n  }\r\n  &::before {\r\n    inset: 0;\r\n    border: ${(p) => p.borderWidth}px solid\r\n      ${(p) => (p.negative ? 'transparent' : p.color)};\r\n    animation-name: ${(p) =>\r\n      borderMainKeyframe({\r\n        color: p.color,\r\n        negative: p.negative,\r\n        timeLoss: p.timeLoss,\r\n        totalTime: p.totalTime\r\n      })};\r\n  }\r\n  &::after {\r\n    inset: ${(p) => (p.negative ? 0 : -1)}px;\r\n    border: ${(p) => p.borderWidth + (p.negative ? 0 : 2)}px solid transparent;\r\n    border-top-color: ${(p) => (p.negative ? p.color : '#ffffff')};\r\n    animation-name: ${(p) =>\r\n      rotateMainKeyframe({\r\n        timeLoss: p.timeLoss,\r\n        totalTime: p.totalTime\r\n      })};\r\n  }\r\n`\r\n\r\nexport const ViewerStyle = styled.span`\r\n  position: absolute;\r\n  font-weight: 700;\r\n  font-size: 0.875rem;\r\n  line-height: 1.25rem;\r\n  transform: rotate(45deg);\r\n`\r\n\r\nexport const StaticLayerStyle = styled.div<StaticLayerStyleType>`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  border-radius: 100%;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  border: ${(p) => p.borderWidth}px solid ${(p) => p.color};\r\n`\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { setInterval } from 'timers'\r\nimport { ViewerStyle } from './Circle.styles'\r\n\r\nexport type CouterPropsType = {\r\n  currentTime: number\r\n  totalTime: number\r\n  onRefresh: () => void\r\n}\r\n\r\nconst Couter = ({ totalTime, currentTime, onRefresh }: CouterPropsType) => {\r\n  const viewer = useRef<HTMLSpanElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!viewer.current) return\r\n\r\n      viewer.current.innerHTML = `${Number(viewer.current.innerHTML) - 1}`\r\n      if (viewer.current.innerHTML === '0') {\r\n        viewer.current.innerHTML = `${totalTime}`\r\n        onRefresh()\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <ViewerStyle ref={viewer} className='circle-count-down__viewer'>\r\n      {currentTime}\r\n    </ViewerStyle>\r\n  )\r\n}\r\n\r\nexport default Couter\r\n","import React, { useState } from 'react'\r\nimport { ANIMATION_TIME, COLOR } from '../utils/configs'\r\nimport {\r\n  CircleStyle,\r\n  MainLayerStyle,\r\n  OverlayLayerStyle,\r\n  StaticLayerStyle,\r\n  ViewerStyle\r\n} from './Circle.styles'\r\nimport Couter from './Counter'\r\n\r\nexport type CirclePropsType = {\r\n  color?: string\r\n  index?: number\r\n  width?: number\r\n  height?: number\r\n  negative?: boolean\r\n  className?: string\r\n  borderWidth?: number\r\n  currentTime?: number\r\n  totalTime?: number\r\n  ready?: boolean\r\n  onRefresh?: () => void\r\n}\r\n\r\nconst Circle = ({\r\n  negative,\r\n  width = 40,\r\n  height = 40,\r\n  ready = true,\r\n  color = COLOR,\r\n  borderWidth = 3,\r\n  totalTime = ANIMATION_TIME,\r\n  currentTime = ANIMATION_TIME,\r\n  onRefresh = () => {}\r\n}: CirclePropsType) => {\r\n  const [timeLoss, setTimeLoss] = useState(totalTime - currentTime)\r\n\r\n  const handleRefresh = () => {\r\n    setTimeLoss(0)\r\n    onRefresh()\r\n  }\r\n\r\n  return (\r\n    <CircleStyle width={width} height={height} className='circle-count-down'>\r\n      {ready ? (\r\n        <React.Fragment>\r\n          <Couter\r\n            currentTime={currentTime}\r\n            totalTime={totalTime}\r\n            onRefresh={handleRefresh}\r\n          />\r\n          <MainLayerStyle\r\n            color={color}\r\n            negative={negative}\r\n            timeLoss={timeLoss}\r\n            borderWidth={borderWidth}\r\n            totalTime={totalTime}\r\n          />\r\n          <OverlayLayerStyle\r\n            color={color}\r\n            negative={negative}\r\n            timeLoss={timeLoss}\r\n            borderWidth={borderWidth}\r\n            totalTime={totalTime}\r\n          ></OverlayLayerStyle>\r\n        </React.Fragment>\r\n      ) : (\r\n        <StaticLayerStyle color={color} borderWidth={borderWidth}>\r\n          <ViewerStyle className='circle-count-down__viewer'>\r\n            {totalTime}\r\n          </ViewerStyle>\r\n        </StaticLayerStyle>\r\n      )}\r\n    </CircleStyle>\r\n  )\r\n}\r\n\r\nexport default Circle\r\n","export const ANIMATION_TIME = 60\r\nexport const COLOR = '#0e0551'\r\n","import React from 'react'\n\nimport { Circle } from 'react-count-down'\n\nconst App = () => {\n  return (\n    <div\n      style={{\n        maxWidth: 1200,\n        margin: '2rem auto'\n      }}\n    >\n      <div className='record'>\n        <div className='record__head'>\n          <Circle />\n          <h4>Positive</h4>\n        </div>\n        <code>{'<Circle />'}</code>\n      </div>\n      <div className='record'>\n        <div className='record__head'>\n          <Circle negative />\n          <h4>Negative</h4>\n        </div>\n        <code>{'<Circle negative />'}</code>\n      </div>\n      <div className='record'>\n        <div className='record__head'>\n          <Circle ready={false} />\n          <h4>Waiting for a promise or an observable</h4>\n        </div>\n        <code>{'<Circle ready={false} />'}</code>\n      </div>\n      <div className='record'>\n        <div className='record__head'>\n          <Circle currentTime={42} />\n          <h4>The current time is between 0 and total</h4>\n        </div>\n        <code>{'<Circle currentTime={42} />'}</code>\n      </div>\n      <div className='record'>\n        <div className='record__head custom'>\n          <Circle borderWidth={5} color='red' width={50} height={50} />\n          <h4>Custom the circle's style </h4>\n        </div>\n        <code>\n          {'<Circle borderWidth={5} color=\"red\" width={50} height={50} />'}\n        </code>\n        <div style={{ margin: '1rem 0 5px 1rem' }}>\n          or <b>Custom text color</b>\n        </div>\n        <code>\n          .circle-count-down__viewer:\n          {`{\n            color: green;\n          }`}\n        </code>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}